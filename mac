#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

append_to_bashrc() {
  local text="$1" bashrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.bashrc.local" ]; then
    bashrc="$HOME/.bashrc.local"
  else
    bashrc="$HOME/.bashrc"
  fi

  if ! grep -Fqs "$text" "$bashrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$bashrc"
    else
      printf "\\n%s\\n" "$text" >> "$bashrc"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.bashrc" ]; then
  touch "$HOME/.bashrc"
fi

# shellcheck disable=SC2016
append_to_bashrc 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_bashrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_bashrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "thoughtbot/formulae"
tap "homebrew/services"
tap "universal-ctags/universal-ctags"
tap "caskroom/cask"
tap "nexeck/homebrew-tmuxinator"

brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "watchman"
brew "tmuxinator"
brew "readline"
brew "sqlite3"
brew "xz"
brew "zlib"
brew "elixir"
brew "hub"
brew "imagemagick"
brew "libyaml" # should come after openssl
brew "coreutils"
brew "tree"
brew "yarn"
brew "rbenv"
brew "nvm"
brew "pyenv"

cask "gpg-suite"
cask "docker"
cask "google-chrome"
cask "cleanmymac"
cask "paste"
cask "skitch"
cask "1password"
cask "fantastical"
cask "firefox"
cask "karabiner-elements"
cask "keycastr"
cask "kindle"
cask "omnifocus"
cask "sizeup"
cask "slack"
cask "spamsieve"

EOF

# Setup a bunch of defaults
defaults write com.apple.Terminal ShellExitAction 0

# Install ruby
if ! type -P "rbenv" &>/dev/null; then
  fancy_echo "Installing latest Ruby ..."
  echo 'eval "$(rbenv init -)"' >>~/.bashrc
  source ~/.bashrc
  rbenv install 2.6.3
  rbenv global 2.6.3
  gem update
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
fi

if ! type -P "nvm" &>/dev/null; then
  fancy_echo "Installing latest Node ..."
  mkdir ~/.nvm
  echo 'export NVM_DIR=~/.nvm' >>~/.bashrc
  echo 'source $(brew --prefix nvm)/nvm.sh'
  source ~/.bashrc
  nvm install node
  nvm use default
fi

fancy_echo "Installing latest python ..."
pyenv install 3.7.4

fancy_echo "Installing dotfiles ..."
git clone https://github.com/edgibbs/.dotfiles.git ~/.dotfiles
rcup -v

fancy_echo "Setting up bash-it ..."
git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it
~/.bash_it/install.sh --no-modify-config

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi
